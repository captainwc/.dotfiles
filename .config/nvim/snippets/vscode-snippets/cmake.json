{
    "cmake_quick_start (vcpkg)": {
        "prefix": "cmake_quick_start",
        "body": [
            "cmake_minimum_required(VERSION 3.16)",
            "project($1)",
            "",
            "set(CMAKE_EXPORT_COMPILE_COMMANDS ON)",
            "set(CMAKE_CXX_STANDARD $2)",
            "set(CMAKE_CXX_STANDARD_REQUIRED ON)",
            "set(CMAKE_CXX_FLAGS \"\\${CMAKE_CXX_FLAGS} -w\")",
            "set(CMAKE_BINARY_DIR \\${CMAKE_SOURCE_DIR}/build)",
            "set(EXECUTABLE_OUTPUT_PATH \\${CMAKE_BINARY_DIR}/bin)",
            "if(NOT DEFINED CMAKE_INSTALL_PREFIX)",
            "    set(CMAKE_INSTALL_PREFIX \\${CMAKE_BINARY_DIR}/install CACHE PATH \"Default install path\")",
            "endif()",
            "",
            "list(APPEND CMAKE_PREFIX_PATH \"\\$ENV{VCPKG_ROOT}/installed/\\$ENV{VCPKG_DEFAULT_TRIPLET}\")",
            "",
            "add_executable($3 $4)"
        ],
        "description": "quick start a cmake project"
    },
    "cmake_quick_start (Qt6)": {
        "prefix": "cmake_quick_qt6",
        "body": [
            "cmake_minimum_required(VERSION 3.16)",
            "project(${1:qt_demo} VERSION 1.0 LANGUAGES CXX)",
            "",
            "set(TARGET ${2:qt6_demo})",
            "set(SOURCES ${3:main.cpp})",
            "set(UI_FILE ${4:main.ui})",
            "set(QT_INSTALL_PATH ${5:\\$ENV{QT_PATH}})",
            "",
            "set(CMAKE_AUTOMOC ON)  # 自动处理 Q_OBJECT 宏",
            "set(CMAKE_AUTORCC ON)  # 自动处理资源文件",
            "set(CMAKE_AUTOUIC ON)  # 自动处理 UI 文件",
            "",
            "# C++ 标准",
            "set(CMAKE_CXX_STANDARD 17)",
            "set(CMAKE_CXX_STANDARD_REQUIRED ON)",
            "set(CMAKE_EXPORT_COMPILE_COMMANDS ON)",
            "",
            "set(CMAKE_BINARY_DIR \\${PROJECT_SOURCE_DIR}/build)",
            "set(EXECUTABLE_OUTPUT_PATH \\${CMAKE_BINARY_DIR}/bin)",
            "",
            "# 查找 Qt 包",
            "list(APPEND CMAKE_PREFIX_PATH \\${QT_INSTALL_PATH})",
            "find_package(Qt6 COMPONENTS Core Gui Widgets REQUIRED)",
            "",
            "# 添加可执行文件",
            "add_executable(\\${TARGET} \\${SOURCES})",
            "",
            "# 链接 Qt 库",
            "target_link_libraries(\\${TARGET} PRIVATE",
            "    Qt6::Core",
            "    Qt6::Gui",
            "    Qt6::Widgets",
            ")",
            "",
            "# 在 Windows 上创建 Windows 应用程序（不显示控制台窗口）",
            "if(WIN32)",
            "    set_target_properties(\\${TARGET} PROPERTIES WIN32_EXECUTABLE TRUE)",
            "endif()",
            "",
            "# 自动化",
            "if(WIN32)",
            "    find_program(UIC NAMES uic.exe HINTS \\${QT_PATH}/bin REQUIRED)",
            "    find_program(DEPLOYQT NAMES windeployqt.exe HINTS \\${QT_PATH}/bin REQUIRED)",
            "",
            "    string(REPLACE \".ui\" \"_ui.h\" UI_HEADER \\${UI_FILE})",
            "",
            "    # 生成 xxx_ui.h",
            "    add_custom_command(",
            "        OUTPUT \\${CMAKE_CURRENT_SOURCE_DIR}/\\${UI_HEADER}",
            "        COMMAND \\${UIC} \\${CMAKE_CURRENT_SOURCE_DIR}/\\${UI_FILE} -o \\${CMAKE_CURRENT_SOURCE_DIR}/\\${UI_HEADER}",
            "        DEPENDS \\${CMAKE_CURRENT_SOURCE_DIR}/\\${UI_FILE}",
            "        COMMENT \"Generating \\${UI_HEADER}\"",
            "    )",
            "    add_custom_target(GenerateUiHeader ALL DEPENDS \\${CMAKE_CURRENT_SOURCE_DIR}/\\${UI_HEADER})",
            "    add_dependencies(\\${TARGET} GenerateUiHeader)",
            "",
            "    # 自动拷贝依赖",
            "    add_custom_command(",
            "        TARGET \\${TARGET} POST_BUILD",
            "        COMMAND \\${CMAKE_COMMAND} -E echo \"Copying DLLs...\"",
            "        COMMAND \\${DEPLOYQT} --release --dir \\${EXECUTABLE_OUTPUT_PATH} \\${EXECUTABLE_OUTPUT_PATH}/\\${TARGET}.exe",
            "        COMMENT \"Deploying Qt dependencies\"",
            "    )",
            "endif()"
        ],
        "description": "Qt6 CMake Project Template"
    }
}
