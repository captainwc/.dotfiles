// 将键绑定放在此文件中以覆盖默认值auto[]
[
    {
        "key": "shift+enter",
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+d",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+f",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "alt+f",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "alt+w",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+`",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "alt+2",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "alt+1",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+m ctrl+enter",
        "command": "github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
        // m-mine, means that this keyboard is set by me, rather than the default 'ctrl+k'
        "key": "ctrl+m ctrl+w",
        "command": "editor.action.toggleWordWrap"
    },
    {
        "key": "alt+e",
        "command": "editor.debug.action.selectionToRepl"
    },
    {
        "key": "f9",
        "command": "workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f8",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f7",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "ctrl+f5",
        "command": "-workbench.action.debug.run",
        "when": "debuggersAvailable && debugState != 'initializing'"
    },
    {
        "key": "ctrl+f5",
        "command": "-cmake.debugTarget",
        "when": "cmake:enableFullFeatureSet && inCMakeProject && !cmake:hideDebugCommand && !inDebugMode"
    },
    {
        "key": "ctrl+f5",
        "command": "workbench.action.debug.run"
    },
    {
        "key": "ctrl+w",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+m ctrl+r",
        "command": "cmake.cleanConfigure"
    },
    {
        "key": "ctrl+m ctrl+d",
        "command": "cmake.cleanConfigure"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "shift+alt+w",
        "command": "workbench.action.closeEditorsToTheRight"
    },
    {
        "key": "ctrl+alt+w",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "alt+p",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "alt+3",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "ctrl+shift+oem_minus",
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+alt+oem_minus",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "ctrl+shift+oem_minus",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+shift+oem_plus",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+oem_minus",
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+oem_4",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+oem_minus",
        "command": "notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+oem_4",
        "command": "-notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+oem_plus",
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+oem_6",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+oem_plus",
        "command": "notebook.unfold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+oem_6",
        "command": "-notebook.unfold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+alt+oem_plus",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "ctrl+shift+oem_plus",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "alt+g",
        "command": "lazygit.openLazygit"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "-workbench.action.keybindingsReference"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchEditorRegex",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
    },
    {
        "key": "alt+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchRegex",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+r",
        "command": "workbench.action.files.revert"
    },
    {
        "key": "alt+r",
        "command": "git.revertSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "-git.revertSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "ctrl+alt+oem_3",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "alt+2",
        "command": "workbench.action.gotoSymbol",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
    },
    {
        "key": "alt+l",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "alt+q",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+shift+oem_2",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    }
]